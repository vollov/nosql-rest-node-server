store session?
https://www.airpair.com/express/posts/expressjs-and-passportjs-sessions-deep-dive
npm install express body-parser morgan mongoose jsonwebtoken --save
impl
https://scotch.io/tutorials/authenticate-a-node-js-api-with-json-web-tokens
https://aleksandrov.ws/2013/09/12/restful-api-with-nodejs-plus-mongodb/

http://code.tutsplus.com/tutorials/authenticating-nodejs-applications-with-passport--cms-21619
https://scotch.io/tutorials/easy-node-authentication-setup-and-local
** http://www.sitepoint.com/local-authentication-using-passport-node-js/
http://stackoverflow.com/questions/17400758/comprehensive-tutorial-for-nodejs-passport-local-strategy-setup

res.cookie('name', 'tobi', { domain: '.example.com', path: '/admin', secure: true });
res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });


const session = require('express-session');
const MongoStore = require('connect-mongo')(session);
 
app.use(session({
    secret: 'foo',
    store: new MongoStore(options)
}));

options = { url: 'mongodb://localhost/test-app' }

var MongoStore = require('connect-mongo')(session);
app.locals.mongo_options = { url: 'mongodb://localhost/demo' }
store: new MongoStore(app.locals.mongo_options),


var MongoDBStore = require('connect-mongodb-session')(session);
var store = new MongoDBStore(
      { 
        uri: 'mongodb://localhost:27017/connect_mongodb_session_test',
        collection: 'mySessions'
      });

      
      "connect-redis": "3.0.2",
      var redis   = require("redis");
var client  = redis.createClient();
//var redis = require("redis").createClient();
      //var RedisStore = require('connect-redis')(session);
      //app.locals.redis_options = { host: 'localhost', port: 3000, client: client }
app.locals.redis_options = { host: 'localhost', client: client}// ttl in seconds, ttl: 5 * 24 * 60 * 60, client: client,port: 6379, db: 0
      store: new RedisStore(app.locals.redis_options),